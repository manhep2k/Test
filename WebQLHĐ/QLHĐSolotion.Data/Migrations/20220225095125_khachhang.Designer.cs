// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLHĐSolotion.Data.EF;

#nullable disable

namespace QLHĐSolotion.Data.Migrations
{
    [DbContext(typeof(testDbontext))]
    [Migration("20220225095125_khachhang")]
    partial class khachhang
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens", (string)null);
                });

            modelBuilder.Entity("QLHĐSolotion.Data.Entity.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("QLHĐSolotion.Data.Entity.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QLHĐSolotion.Data.Entity.CtrCongNo", b =>
                {
                    b.Property<int>("CtrCongNoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CtrCongNoID"), 1L, 1);

                    b.Property<decimal>("DaThanhToan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DuNo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("KhauTru")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Kyhan")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaCongNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongNo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Trangthai")
                        .HasColumnType("bit");

                    b.HasKey("CtrCongNoID");

                    b.ToTable("CtrCongNos");
                });

            modelBuilder.Entity("QLHĐSolotion.Data.Entity.CtrDoiTac", b =>
                {
                    b.Property<int>("CtrDoiTacID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CtrDoiTacID"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DienThoai")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("MaDoitac")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaSoThueDT")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("TaiKhoanDangNhap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenDoiTac")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("CtrDoiTacID");

                    b.ToTable("CtrDoiTac");

                    b.HasData(
                        new
                        {
                            CtrDoiTacID = 1,
                            DiaChi = "phạm văn mạnh",
                            DienThoai = 1555555,
                            MaDoitac = "01",
                            MaSoThueDT = 777,
                            TaiKhoanDangNhap = "ADMIN",
                            TenDoiTac = "phạm văn mạnh"
                        },
                        new
                        {
                            CtrDoiTacID = 2,
                            DiaChi = "phạm văn mạnh",
                            DienThoai = 1555555,
                            MaDoitac = "02",
                            MaSoThueDT = 777,
                            TaiKhoanDangNhap = "ADMIN",
                            TenDoiTac = "phạm văn mạnh"
                        });
                });

            modelBuilder.Entity("QLHĐSolotion.Data.Entity.CtrHopDong", b =>
                {
                    b.Property<int>("CtrHopDongID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CtrHopDongID"), 1L, 1);

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CtrCongNoID")
                        .HasColumnType("int");

                    b.Property<int>("CtrDoiTacID")
                        .HasColumnType("int");

                    b.Property<int>("CtrKhachHangID")
                        .HasColumnType("int");

                    b.Property<string>("DonViHDDT")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("GiaTriGoiDV")
                        .HasColumnType("money");

                    b.Property<string>("LinkHDDT")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LinkPhanMem")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MaHĐ")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayNghiemThu")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiPhuTrachHopDong")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NoiDungHD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaiKhoanHDDT")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenHopDong")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("CtrHopDongID");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CtrCongNoID");

                    b.HasIndex("CtrDoiTacID");

                    b.HasIndex("CtrKhachHangID");

                    b.ToTable("CtrHopDongs");
                });

            modelBuilder.Entity("QLHĐSolotion.Data.Entity.CtrKhachHang", b =>
                {
                    b.Property<int>("CtrKhachHangID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CtrKhachHangID"), 1L, 1);

                    b.Property<string>("Diachi")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Dienthoai")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaKH")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaSothueKH")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime2");

                    b.Property<string>("Skype")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CtrKhachHangID");

                    b.ToTable("CtrKhachHang");
                });

            modelBuilder.Entity("QLHĐSolotion.Data.Entity.CtrHopDong", b =>
                {
                    b.HasOne("QLHĐSolotion.Data.Entity.AppUser", "AppUser")
                        .WithMany("CtrHopDongs")
                        .HasForeignKey("AppUserId");

                    b.HasOne("QLHĐSolotion.Data.Entity.CtrCongNo", "CtrCongNo")
                        .WithMany("CtrHopDongs")
                        .HasForeignKey("CtrCongNoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLHĐSolotion.Data.Entity.CtrDoiTac", "CtrDoiTac")
                        .WithMany("CtrHopDongs")
                        .HasForeignKey("CtrDoiTacID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLHĐSolotion.Data.Entity.CtrKhachHang", "CtrKhachHang")
                        .WithMany("CtrHopDongs")
                        .HasForeignKey("CtrKhachHangID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("CtrCongNo");

                    b.Navigation("CtrDoiTac");

                    b.Navigation("CtrKhachHang");
                });

            modelBuilder.Entity("QLHĐSolotion.Data.Entity.AppUser", b =>
                {
                    b.Navigation("CtrHopDongs");
                });

            modelBuilder.Entity("QLHĐSolotion.Data.Entity.CtrCongNo", b =>
                {
                    b.Navigation("CtrHopDongs");
                });

            modelBuilder.Entity("QLHĐSolotion.Data.Entity.CtrDoiTac", b =>
                {
                    b.Navigation("CtrHopDongs");
                });

            modelBuilder.Entity("QLHĐSolotion.Data.Entity.CtrKhachHang", b =>
                {
                    b.Navigation("CtrHopDongs");
                });
#pragma warning restore 612, 618
        }
    }
}
